From 7cb75f60e227e8af3f8802f7bf866c7a1374b224 Mon Sep 17 00:00:00 2001
From: neomilium <neomilium@gmail.com>
Date: Sat, 13 Mar 2010 00:43:56 +0100
Subject: [PATCH 7/8] Enhance download method
  - some parts of downloadURL() have been extracted to create download_url() and execute() functions.
  - downloadURL() function have been renamed to process_vod()
  - execute() is a simple function to start a program in shell and wait for return code.
  - download_url() now construct output filename, launch flvstreamer cmd and handle success or failure.
  - flvstreamer now download in file with ".incomplete" suffix to filename. If download success, file is renamed correctly

---
 canal.py |   61 ++++++++++++++++++++++++++++++++++++-------------------------
 1 files changed, 36 insertions(+), 25 deletions(-)

diff --git a/canal.py b/canal.py
index 3b7657f..1493c9f 100755
--- a/canal.py
+++ b/canal.py
@@ -25,7 +25,7 @@ from getopt import getopt, GetoptError
 from sys import exit, argv
 from xml.dom import minidom
 from urllib import urlopen
-from os import remove, makedirs
+from os import remove, makedirs, waitpid, rename
 from os.path import join, expanduser, exists
 from subprocess import Popen
 
@@ -132,8 +132,8 @@ def makeDateISO(madate):
     madateISO.append(b[0])
     return '-'.join(madateISO)
 
-
-def downloadURL(url, verbose, overwrite, force, rename):
+def process_vod(url, overwrite, force, rename):
+    print_dbg("FLV URL: " + url)
     item = URLdico[url]# consultaion URLdico
     video_date, video_rubrique = item[0], item[1]
     if not exists(join(dest_directory,video_rubrique)):
@@ -157,22 +157,37 @@ def downloadURL(url, verbose, overwrite, force, rename):
         filename = url.split('/').pop()
     destination = join(dest_directory, video_rubrique, filename)
 
-    cmd ="flvstreamer -eqr "+url+" -o "+file_address
-    if verbose:
-        cmd.replace('-eqr','-er') 
-        print '\t'+cmd
     #Check if we allow to overwrite
-    if exists(file_address) and not overwrite:
-        #print file_address+" already exists"
-        print video_rubrique+"_"+video_date.replace('/', '_')+".flv already exists"
-    elif exists(file_address) and overwrite:
+    if exists(destination) and not overwrite:
+        print_verbose("Skipping \"" + filename + "\", destination already exists")
+    elif exists(destination) and overwrite:
         #Remove file if we can overwrite
-        print 'Removing '+file_address
-        remove(file_address)
-        p = Popen(cmd, shell=True)
+        print_verbose("Removing " + filename)
+        remove(destination)
+        download_url(url, destination)
     else:
-        p = Popen(cmd, shell=True)
+        download_url(url, destination)
 
+def download_url(url, dest):
+    cmd = "flvstreamer -eqr " + url + " -o " + dest + ".incomplete"
+    if verbose:
+        cmd = cmd.replace('-eqr','-er', 1) 
+    if(execute(cmd) != 0):
+        print_err("Something goes wrong while running flvstreamer")
+    else:
+        rename(dest + ".incomplete", dest)
+        print_verbose(url + " have been successfully downloaded (" + dest + ")")
+
+def execute(cmd):
+    print_dbg ("cmd: \"" + cmd + "\"")
+    returncode = -1
+    try:
+        p = Popen(cmd, shell=True)
+        returncode = waitpid(p.pid, 0)[1]
+        print_dbg("execution return code: " + str(returncode))
+    except OSError:
+        print_err("Unable to execute: \"" + cmd + "\"")
+    return returncode
 
 def usage():
     print "-h: display help"
@@ -232,6 +247,7 @@ def main():
             overwrite = True
         if o in ("-v", "--verbose"):
             verbose = True
+            print_dbg("Verbose mode on.")
         if o in ("-r", "--rename"):
             rename = True
         if o in ("-d", "--directory"):
@@ -251,16 +267,11 @@ def main():
             tvshow.append(available_show[o.replace('-', '')])
 
     for show in tvshow:
-        if verbose:
-            print 'Broadcast: '+show
-        try:
-            buildURLdico(show, deep, quality, verbose)
-            for url in URLdico:
-                downloadURL(url, verbose, overwrite, force, rename)
-            URLdico.clear()
-        except OSError:
-            print "Error: flvstreamer is not installed,\
-            destination does not exits or URL is wrong"
+        print_dbg('Broadcast: ' + show)
+        buildURLdico(show, deep, quality)
+        for url in URLdico:
+            process_vod(url, overwrite, force, rename)
+        URLdico.clear()
 
 
 if __name__ == "__main__":
-- 
1.6.3.3

